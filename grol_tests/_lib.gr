/*

Library of macros for testing

*/

// Convert any grol object to a string.
func str(x) {
	sprintf("%v", x)
}

// Test for absence of error and that the expression's result matches a regexp.
NoErr = macro(msg, expr, expectedRegexp) {
	quote(if (r = catch(unquote(expr))).err {
			error("FAIL unexpected error:", r.value, "for", unquote(msg))
		} else {
			if (regexp(unquote(expectedRegexp), str(r.value))) {
				println("OK", unquote(msg), "is:", r.value)
			} else {
				error("FAIL", unquote(msg), "didn't match expected:", r.value)
			}
		})
}

// Test for expected error and that the message matches a regexp.
IsErr = macro(msg, expr, expectedRegexp) {
	quote(if (r = catch(unquote(expr))).err {
			if (regexp(unquote(expectedRegexp), str(r.value))) {
				println("OK", unquote(msg), "get expected error:", r.value)
			} else {
				error("FAIL", unquote(msg), "didn't match expected:", r.value)
			}
		} else {
			error("FAIL", unquote(msg),"didn't get expected error:",r.value)
		})
}

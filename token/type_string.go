// Code generated by "stringer -type=Type"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[EOL-1]
	_ = x[startValueTokens-2]
	_ = x[IDENT-3]
	_ = x[INT-4]
	_ = x[FLOAT-5]
	_ = x[LINECOMMENT-6]
	_ = x[BLOCKCOMMENT-7]
	_ = x[endValueTokens-8]
	_ = x[startSingleCharTokens-9]
	_ = x[ASSIGN-10]
	_ = x[PLUS-11]
	_ = x[MINUS-12]
	_ = x[BANG-13]
	_ = x[ASTERISK-14]
	_ = x[SLASH-15]
	_ = x[PERCENT-16]
	_ = x[LT-17]
	_ = x[GT-18]
	_ = x[COMMA-19]
	_ = x[SEMICOLON-20]
	_ = x[LPAREN-21]
	_ = x[RPAREN-22]
	_ = x[LBRACE-23]
	_ = x[RBRACE-24]
	_ = x[LBRACKET-25]
	_ = x[RBRACKET-26]
	_ = x[COLON-27]
	_ = x[endSingleCharTokens-28]
	_ = x[startMultiCharTokens-29]
	_ = x[LTEQ-30]
	_ = x[GTEQ-31]
	_ = x[EQ-32]
	_ = x[NOTEQ-33]
	_ = x[INCR-34]
	_ = x[DECR-35]
	_ = x[endMultiCharTokens-36]
	_ = x[startIdentityTokens-37]
	_ = x[FUNC-38]
	_ = x[TRUE-39]
	_ = x[FALSE-40]
	_ = x[IF-41]
	_ = x[ELSE-42]
	_ = x[RETURN-43]
	_ = x[STRING-44]
	_ = x[MACRO-45]
	_ = x[QUOTE-46]
	_ = x[UNQUOTE-47]
	_ = x[LEN-48]
	_ = x[FIRST-49]
	_ = x[REST-50]
	_ = x[PRINT-51]
	_ = x[LOG-52]
	_ = x[ERROR-53]
	_ = x[endIdentityTokens-54]
	_ = x[EOF-55]
}

const _Type_name = "ILLEGALEOLstartValueTokensIDENTINTFLOATLINECOMMENTBLOCKCOMMENTendValueTokensstartSingleCharTokensASSIGNPLUSMINUSBANGASTERISKSLASHPERCENTLTGTCOMMASEMICOLONLPARENRPARENLBRACERBRACELBRACKETRBRACKETCOLONendSingleCharTokensstartMultiCharTokensLTEQGTEQEQNOTEQINCRDECRendMultiCharTokensstartIdentityTokensFUNCTRUEFALSEIFELSERETURNSTRINGMACROQUOTEUNQUOTELENFIRSTRESTPRINTLOGERRORendIdentityTokensEOF"

var _Type_index = [...]uint16{0, 7, 10, 26, 31, 34, 39, 50, 62, 76, 97, 103, 107, 112, 116, 124, 129, 136, 138, 140, 145, 154, 160, 166, 172, 178, 186, 194, 199, 218, 238, 242, 246, 248, 253, 257, 261, 279, 298, 302, 306, 311, 313, 317, 323, 329, 334, 339, 346, 349, 354, 358, 363, 366, 371, 388, 391}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}

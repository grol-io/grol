// Code generated by "stringer -type=Type"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[EOL-1]
	_ = x[startValueTokens-2]
	_ = x[IDENT-3]
	_ = x[INT-4]
	_ = x[FLOAT-5]
	_ = x[LINECOMMENT-6]
	_ = x[endValueTokens-7]
	_ = x[startSingleCharTokens-8]
	_ = x[ASSIGN-9]
	_ = x[PLUS-10]
	_ = x[MINUS-11]
	_ = x[BANG-12]
	_ = x[ASTERISK-13]
	_ = x[SLASH-14]
	_ = x[PERCENT-15]
	_ = x[LT-16]
	_ = x[GT-17]
	_ = x[COMMA-18]
	_ = x[SEMICOLON-19]
	_ = x[LPAREN-20]
	_ = x[RPAREN-21]
	_ = x[LBRACE-22]
	_ = x[RBRACE-23]
	_ = x[LBRACKET-24]
	_ = x[RBRACKET-25]
	_ = x[COLON-26]
	_ = x[endSingleCharTokens-27]
	_ = x[startMultiCharTokens-28]
	_ = x[LTEQ-29]
	_ = x[GTEQ-30]
	_ = x[EQ-31]
	_ = x[NOTEQ-32]
	_ = x[INCR-33]
	_ = x[DECR-34]
	_ = x[endMultiCharTokens-35]
	_ = x[startIdentityTokens-36]
	_ = x[FUNC-37]
	_ = x[TRUE-38]
	_ = x[FALSE-39]
	_ = x[IF-40]
	_ = x[ELSE-41]
	_ = x[RETURN-42]
	_ = x[STRING-43]
	_ = x[MACRO-44]
	_ = x[QUOTE-45]
	_ = x[UNQUOTE-46]
	_ = x[LEN-47]
	_ = x[FIRST-48]
	_ = x[REST-49]
	_ = x[PRINT-50]
	_ = x[LOG-51]
	_ = x[ERROR-52]
	_ = x[endIdentityTokens-53]
	_ = x[EOF-54]
}

const _Type_name = "ILLEGALEOLstartValueTokensIDENTINTFLOATLINECOMMENTendValueTokensstartSingleCharTokensASSIGNPLUSMINUSBANGASTERISKSLASHPERCENTLTGTCOMMASEMICOLONLPARENRPARENLBRACERBRACELBRACKETRBRACKETCOLONendSingleCharTokensstartMultiCharTokensLTEQGTEQEQNOTEQINCRDECRendMultiCharTokensstartIdentityTokensFUNCTRUEFALSEIFELSERETURNSTRINGMACROQUOTEUNQUOTELENFIRSTRESTPRINTLOGERRORendIdentityTokensEOF"

var _Type_index = [...]uint16{0, 7, 10, 26, 31, 34, 39, 50, 64, 85, 91, 95, 100, 104, 112, 117, 124, 126, 128, 133, 142, 148, 154, 160, 166, 174, 182, 187, 206, 226, 230, 234, 236, 241, 245, 249, 267, 286, 290, 294, 299, 301, 305, 311, 317, 322, 327, 334, 337, 342, 346, 351, 354, 359, 376, 379}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}

/*
 * Create an image - very useful to use a smaller increment and run with profiling.
 */

// inspiration @shokhie
// See https://github.com/grol-io/grol-discord-bot/blob/main/discord.gr for a version
// with X Y input etc... integrated with discord bot.

// With angle as an int modulo 360 input, this gets memoized.
func ycbcr(angle) {
	a = PI * angle / 180.
	// Y   Cb  Cr
	[190, 128 + 120*sin(a), 128 + 120*cos(a)]
}

// saturation = 1
// lightness = .6

size = 1024
imgName = "canvas"
canvas = image.new(imgName, size, size)
div = 6

t = 0
now = time.now()
// color = [0, saturation, lightness]
for t < 12*PI {
	x = sin(t) * (pow(E, cos(t)) - 2*cos(4*t) - pow(sin(t/12), 5))
	y = cos(t) * (pow(E, cos(t)) - 2*cos(4*t) - pow(sin(t/12), 5))
	angle := int(t*180./PI) % 360 // so ycbr() get memoized with 360 values
	color = ycbcr(angle)
	image.set_ycbcr(canvas, int(size/2+(size/div)*x+0.5), int(size/2.5+(size/div)*y+0.5), color)
	// Or in HSL:
	// color[0] = t/(12*PI) // hue
	// image_set_hsl(canvas, int(size/2+(size/div)*x+0.5), int(size/2.5+(size/div)*y+0.5), color)
	t = t + 0.0005 // 0.0001 for profiling.
}
elapsed = time.now() - now
log("Time elapsed: ", elapsed, " seconds")

image.save(imgName)

println("Saved image to grol.png")

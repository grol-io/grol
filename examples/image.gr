/* Create an image */

// inspiration @shokhie

func hue2rgb(p, q, t) {
    if t < 0 {
        t++
    }
    if t > 1 {
        t--
    }
    if t < 1. / 6. {
        return p + (q - p) * 6. * t
    }
    if t < 1. / 2. {
        return q
    }
    if t < 2. / 3. {
        return p + (q - p) * (2. / 3. - t) * 6.
    }
    return p
}

func hslToRgb(h, s, l) {
    if s == 0 {
        return [l * 255, l * 255, l * 255]  // Achromatic
    }
    if l < 0.5 {
        q = l * (1. + s)
    } else {
        q = l + s - l * s
    }
    p = 2. * l - q
    r = hue2rgb(p, q, h + 1. / 3.)
    g = hue2rgb(p, q, h)
    b = hue2rgb(p, q, h - 1. / 3.)
    return [int(round(r * 255)), int(round(g * 255)), int(round(b * 255))]
}

saturation = 1
lightness = .6

size = 1024
imgName = "canvas"
canvas = image(imgName, size, size)
div = 6

t = 0
now = time()
hue = 0
lastHue = -99
for t < 12*PI {
	x = sin(t) * (pow(E, cos(t)) - 2*cos(4*t) - pow(sin(t/12), 5))
	y = cos(t) * (pow(E, cos(t)) - 2*cos(4*t) - pow(sin(t/12), 5))
	if t > lastHue + PI/12. { // 144 values
		lastHue = t
		hue = t/(12.*PI)
		color = hslToRgb(hue, saturation, lightness)
	}
	image_set(imgName, int(size/2+(size/div)*x+0.5), int(size/2.5+(size/div)*y+0.5), color)
	t = t + 0.0005
}
elapsed = time() - now
println("Time elapsed: ", elapsed, " seconds")

image_save(imgName)

println("Saved image to grol.png")

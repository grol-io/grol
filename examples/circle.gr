/* bezier cube to disc
https://spencermortensen.com/articles/bezier-circle/

P0=(0,a), P1=(b,c), P2=(c,b), P3=(a,0), where
a=1.00005519
b=0.55342686
c=0.99873585

*/

func sign(x) {
	if x < 0 {
		return -1
	}
	return 1
}

func circleQuadrant(img, x, y, rx, ry, color, thickness) {
	a := 1.00005519
	b := 0.55342686
	c := 0.99873585
	thickness = thickness / 2.
	p0x := x + rx*a - thickness
	p0y := y
	image.move_to(img, p0x, p0y)
	image.line_to(img, p0x+2*thickness, p0y)
	rx = rx + thickness
	ry = ry + thickness
	p2x := x + rx*b
	p2y := y + ry*c
	p1x := x + rx*c
	p1y := y + ry*b
	p3x := x
	p3y := y + ry*a
	image.cube_to(img, p1x, p1y, p2x, p2y, p3x, p3y)
	rx = rx - 2*thickness
	ry = ry - 2*thickness
	p3y := y + ry*a
	image.line_to(img, x, p3y)
	p2x := x + rx*b
	p2y := y + ry*c
	p1x := x + rx*c
	p1y := y + ry*b
	image.cube_to(img, p2x, p2y, p1x, p1y, p0x, p0y)
	// image.line_to(img, x, y) // covered by close_path in draw
	image.draw(img, color)
}


xsize:=550
ysize:=350

img := "canvas"
image.new(img, xsize, ysize)

circleQuadrant(img, xsize/2, ysize/2, 150, 150, [200,70,70,200], 50)
circleQuadrant(img, xsize/2, ysize/2, -150, -150, [70,200,70,200], 50)
circleQuadrant(img, xsize/2, ysize/2, -150, 150, [70,70,200,200], 50)
circleQuadrant(img, xsize/2, ysize/2, 150, -150, [200,200,70,200], 50)

image.save(img)

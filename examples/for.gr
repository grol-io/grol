/*
 Grol now has `for` loops.
 There are 2 basic forms:

 1. `for` with stop condition (like C's while, or go's single clause for):
     for cond { body }
 2. `for` iterating over iteratable tyoes which is grol are strings, maps and arrays:
     for v = iterable { body }
 3. fixed number of iterations:
     for 10 { body }
 4. `for` with integer range:
     for i = -2:7 { body }
*/

for 3 {println("this will be printed 3 times")}

// Also demonstrates break, loop ends when i > 3 instead of continuing to 36
for i = -2:37 {println("i is",i); if i >= 3 {break}}

// like first() iterating over maps produces key-value pairs (maps with keys `key` and `value`)
for kv = {"c":3,"a":1,"b":2} {println("key",kv.key,"value",kv.value)}

// iterating over arrays
for v = [2,-5,7] {println("v",v)}

// For strings iterations is on runes - demonstrate continue (skip the "b")
for c = "abðŸ˜€" {if c=="b" {continue} println("rune",c)}
